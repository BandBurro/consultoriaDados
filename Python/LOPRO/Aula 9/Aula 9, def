{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMIqKdxMG0WfCajrzz91oo3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Guz5yDZ64Ju1","executionInfo":{"status":"ok","timestamp":1746055834475,"user_tz":180,"elapsed":8,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"a46a9068-2aeb-4ebb-f941-cb08481c5a82"},"outputs":[{"output_type":"stream","name":"stdout","text":["recebido 5\n","recebido 23.8\n","recebido -55\n","\n","com variavel\n","recebido 555\n","recebido 37.9\n","recebido -14\n","\n","alterção a)\n","recebido 2\n","recebido 3\n","recebido 4\n","valor 1: 123123\n","valor 2: 12341234\n","\n","alterção b)\n","valor 1: 22\n","valor 2: 33\n","valor 1: 15\n","valor 2: 16\n","valor 1: 44\n","valor 2: 45\n","\n","alteração c)\n"]}],"source":["def mostra_dois_valores(valor1, valor2):\n","  print('valor 1:', valor1)\n","  print('valor 2:', valor2)\n","def mostra_valor(p_valor):\n","  print(\"recebido\", p_valor)\n","# if __name__ == '__main__':\n","\n","\n","# main\n","mostra_valor(5)\n","mostra_valor(23.8)\n","mostra_valor(-55)\n","print('\\ncom variavel')\n","v_random = 555\n","mostra_valor(v_random)\n","v_random2 = 37.9\n","mostra_valor(v_random2)\n","v_random3 = -14\n","mostra_valor(v_random3)\n","print('\\nalterção a)')\n","var1 = 2\n","mostra_valor(var1)\n","var2 = 3\n","mostra_valor(var2)\n","var3 = 4\n","mostra_valor(var3)\n","valor1 = 123123\n","valor2 = 12341234\n","mostra_dois_valores(valor1, valor2)\n","print('\\nalterção b)')\n","valor1 = 22\n","valor2= 33\n","mostra_dois_valores(valor1, valor2)\n","valor2 = 16\n","valor1 = 15\n","mostra_dois_valores(valor1, valor2)\n","valor1 = 44\n","valor2 = 45\n","mostra_dois_valores(valor1, valor2)\n","print('\\nalteração c)')"]},{"cell_type":"code","source":["def calculadora_dobro(p_valor):\n","  dobro = p_valor*2\n","  print('recebido', p_valor)\n","  return dobro\n","def calcula_triplo(p_valor):\n","  triplo = p_valor*3\n","  print('recebido', p_valor)\n","  return triplo\n","\n","\n","# main\n","valor1 = int(input('valor inteiro '))\n","v_retornado = calculadora_dobro(valor1)\n","print('valor retornado', v_retornado)\n","print('\\nalteração a)')\n","\n","valor2 = int(input('valor inteiro '))\n","v_retornado = calcula_triplo(valor2)\n","print('valor retornado', v_retornado)\n","print('\\nalteração b)')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"96LvKnt4Cotp","executionInfo":{"status":"ok","timestamp":1746056915666,"user_tz":180,"elapsed":2820,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"9f359585-277b-4fa1-fdf9-16bb41293b6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["valor inteiro 5\n","recebido 5\n","valor retornado 10\n","\n","alteração a)\n","valor inteiro 10\n","recebido 10\n","valor retornado 30\n","\n","alteração b)\n"]}]},{"cell_type":"code","source":["def dois_valores(valor1, valor2):\n","  adição = valor1 + valor2\n","  return adição\n","\n","# main\n","valor1 = int(input('primeiro valor: '))\n","valor2 = int(input('segundo valor: '))\n","v_retorno = dois_valores(valor1, valor2)\n","print(\"soma =\", v_retorno)\n","print('\\nalteração a)')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WUA_dV8uPf1s","executionInfo":{"status":"ok","timestamp":1746059561301,"user_tz":180,"elapsed":1049,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"34fc496d-1ef9-43a5-91c9-e2737bb6970d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["primeiro valor: 1\n","segundo valor: 2\n","soma = 3\n"]}]},{"cell_type":"code","source":["def soma(valorA, valorB):\n","  adição = valorA + valorB\n","  return valorA + valorB\n","def sub(valorA, valorB):\n","  sub = valorA - valorB\n","  return valorA - valorB\n","\n","#main\n","valorA = int(input('primeiro valor: '))\n","valorB = int(input('segundo valor: '))\n","retornosoma = soma(valorA, valorB)\n","print('soma =', retornosoma)\n","#valorA = int(input('primeiro valor: '))\n","#valorB = int(input('segundo valor: '))\n","retornosub = sub(valorA, valorB)\n","print('sub =', retornosub)\n","\n","#alteração a)\n","def soma(valorA, valorB):\n","  #adição = valorA + valorB\n","  return valorA + valorB\n","def sub(valorA, valorB):\n","  #sub = valorA - valorB\n","  return valorA - valorB\n","\n","#main\n","valorA = int(input('primeiro valor: '))\n","valorB = int(input('segundo valor: '))\n","retornosoma = soma(valorA, valorB)\n","print('soma =', retornosoma)\n","#valorA = int(input('primeiro valor: '))\n","#valorB = int(input('segundo valor: '))\n","retornosub = sub(valorA, valorB)\n","print('sub =', retornosub)\n","\n","#alteração b)\n","def soma(valorA, valorB):\n","  adição = valorA + valorB\n","  return valorA + valorB\n","def sub(valorA, valorB):\n","  sub = valorA - valorB\n","  return valorA - valorB\n","\n","#main\n","valorA = int(input('primeiro valor: '))\n","valorB = int(input('segundo valor: '))\n","#retornosoma = soma(valorA, valorB)\n","print('soma =', soma)\n","#valorA = int(input('primeiro valor: '))\n","#valorB = int(input('segundo valor: '))\n","#retornosub = sub(valorA, valorB)\n","print('sub =', sub)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"tD7VMnJL-I-a","executionInfo":{"status":"error","timestamp":1747264013201,"user_tz":180,"elapsed":2765,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"03e7b061-413b-4e70-c8f0-a9d963272bba"},"execution_count":7,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-0937d0f9d7c2>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m#main\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mvalorA\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'primeiro valor: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0mvalorB\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'segundo valor: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mretornosoma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoma\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalorA\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalorB\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1175\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1176\u001b[0m             )\n\u001b[0;32m-> 1177\u001b[0;31m         return self._input_request(\n\u001b[0m\u001b[1;32m   1178\u001b[0m             \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"shell\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1217\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1219\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1220\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1221\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"code","source":["def soma(valorA, valorB):\n","  adição = valorA + valorB\n","  return valorA + valorB\n","def sub(valorA, valorB):\n","  sub = valorA - valorB\n","  return valorA - valorB\n","alternativa = input('deseja somar ou subtrair? ')\n","valorA = int(input('primeiro valor: '))\n","valorB = int(input('segundo valor: '))\n","\n","#main\n","if alternativa == 'somar':\n","  #valorA = int(input('primeiro valor: '))\n","  #valorB = int(input('segundo valor: '))\n","  retornosoma = soma(valorA, valorB)\n","  print('soma =', retornosoma)\n","#valorA = int(input('primeiro valor: '))\n","#valorB = int(input('segundo valor: '))\n","elif alternativa == 'subtrair':\n","  #valorA = int(input('primeiro valor: '))\n","  #valorB = int(input('segundo valor: '))\n","  retornosub = sub(valorA, valorB)\n","  print('sub =', retornosub)\n","\n","#alteração a)\n","\n","#main\n","if alternativa == '+':\n","  #valorA = int(input('primeiro valor: '))\n","  #valorB = int(input('segundo valor: '))\n","  retornosoma = soma(valorA, valorB)\n","  print('soma =', retornosoma)\n","#valorA = int(input('primeiro valor: '))\n","#valorB = int(input('segundo valor: '))\n","elif alternativa == '-':\n","  #valorA = int(input('primeiro valor: '))\n","  #valorB = int(input('segundo valor: '))\n","  retornosub = sub(valorA, valorB)\n","  print('sub =', retornosub)\n","else:\n","  print('opção invalida')\n","\n","#alteração b) trocar as opções de soma e subtração pelos seus respectivos simbolos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dYSlBMThDo6f","executionInfo":{"status":"ok","timestamp":1747265437002,"user_tz":180,"elapsed":2627,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"5fec9fbb-74ab-4d1f-f9a4-21d8a74b198f"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["deseja somar ou subtrair?+\n","primeiro valor: 2\n","segundo valor: 3\n","soma = 5\n"]}]},{"cell_type":"code","source":["def maximo(valorA, valorB):\n","  if valorA > valorB:\n","    return valorA\n","  else:\n","    return valorB\n","\n","#main\n","valorA = int(input('primeiro valor: '))\n","valorB = int(input('segundo valor: '))\n","valormax = maximo(valorA, valorB)\n","print(valormax)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHOLIT3xD8Vc","executionInfo":{"status":"ok","timestamp":1747265899531,"user_tz":180,"elapsed":6833,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"528a4496-e922-457f-82cc-46c5262f3eee"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["primeiro valor: 5\n","segundo valor: 2\n","5\n"]}]},{"cell_type":"code","source":["def converte_em_minuto(hrs, min):\n","  vl_minutos = hrs * 60 + min\n","  return vl_minutos\n","#main\n","print('digite as horas e minutos')\n","hrs = int(input('digite as horas: '))\n","min = int(input('digite os minutos: '))\n","print(converte_em_minuto(hrs, min),'minutos')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NJRMfxNDVYef","executionInfo":{"status":"ok","timestamp":1747269505699,"user_tz":180,"elapsed":1638,"user":{"displayName":"Matheus Nepomuceno","userId":"08563643936405360107"}},"outputId":"b62cf1b4-48e3-49d2-a439-33a19b3ff87f"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["digite as horas e minutos\n","digite as horas: 2\n","digite os minutos: 30\n","150 3minutos\n"]}]}]}